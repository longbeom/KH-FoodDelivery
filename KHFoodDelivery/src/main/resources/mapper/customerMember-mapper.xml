<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
     

	 <resultMap id="memberQna" type="map">
	 </resultMap>
     <resultMap id="member" type="map">
	</resultMap>
	 <resultMap id="store" type="map">
	</resultMap>
	
	   <resultMap id="member1" type="member">
	</resultMap>
	<insert id="insertMember" parameterType="member" >
		insert into member values(SEQ_MEMBERNUM.nextval,#{memberId},#{memberPw},#{memberName},#{memberAddress},#{memberBirth},#{memberPhone},#{memberEmail},#{nickName},default,#{memberGender},default,default,0,0,#{profileImage})
	</insert>
	
	<select id="checkId" parameterType="String" resultType="_int">
		select count(*) from member where memberId=#{memberId}
	</select>
	
	<select id="checkNick" parameterType="string" resultType="_int">
		select count(*) from member where nickName=#{nickName}
	</select>
	
	<select id="login" parameterType="map" resultMap="member">
		select * from member where memberId=#{id}
	</select>
	<select id="selectMember" parameterType="string" resultMap="member1" >
		select * from member where memberId=#{memberId}
	</select>
	<update id="update" parameterType="member">
		update member set NICKNAME=#{nickName},MEMBERBIRTH=#{formatBirth},MEMBEREMAIL=#{memberEmail},MEMBERPHONE=#{memberPhone},MEMBERADDRESS=#{memberAddress},MEMBERENROLLDATE=default,MEMBERGENDER=#{memberGender},PROFILEIMAGE=#{profileImage} where MEMBERID=#{memberId}		
	</update>
	
	<select id="selectStore" parameterType="string" resultType="store">		  	
		select* from store where STORECATEGORY=#{category} and ISCONFIRM=1	
	</select>
	<select id="selectStore2" parameterType="int" resultType="store">		  	
		select* from store where BUSINESSCODE=#{besinessCode} and ISCONFIRM=1	
	</select>
	
	 <select id="selectMenuCount" resultType="_int">
	 
		  	select count(*) from store
		  </select>
		  
		<delete id="drop" parameterType="member">
			delete from member where MEMBERID=#{memberId}
		
		</delete>
	
	<select id="selectCategoryList" parameterType="_int" resultType="map">
		select b.menucategorycode, b.menucategory from menu a inner join menu_category b on a.menucategorycode=b.menucategorycode where a.businesscode=#{businessCode} group by b.menucategorycode, b.menucategory
	</select>
	

	<!-- <select id="selectMenuList" parameterType="_int" resultType="map">
		select * from menu where menucategorycode=#{menuCategoryCode} AND businesscode=#{businessCode}
	</select> -->
	
	<!-- 아이디찾기 -->
	<select id="selectSearchId" parameterType="map" resultType="map">
	select * from member where membername=#{memberName} and memberemail=#{memberEmail}
	</select>
	
	<!-- 비밀번호찾기 -->
	<select id="selectConfirmEmail" resultType="map" parameterType="map">
	select * from member where memberid=#{memberId} and memberemail=#{memberEmail}
	</select>
	<update id="updatePw" parameterType="map">
	update member set memberpw=#{memberPw} where memberid=#{memberId} and memberemail =#{memberEmail}
	</update>

	<select id="selectMenuList" parameterType="map" resultMap="member">
		select * from menu where MENUCATEGORYCODE=#{menuCategoryCode} AND BUSINESSCODE=#{businessCode}
	</select>
	
	<select id="selectAllStore" resultType="store">
		select * from store where ISCONFIRM=1
	</select>

	
	
	<select id="memberQnaList"  parameterType="string" resultType="memberQna">
		select mq.*, m.memberId from member_qna mq JOIN member m ON(mq.memberNum = m.memberNum) where MEMBERID=#{memberId}
	</select>



</mapper>
